{"version":3,"sources":["componentes/AddCategory.js","helpers/GetGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/UseFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","resp","fetch","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","UseFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,sDAGbI,EAAOC,MAAMH,GAHA,SAISE,EAJT,8BAIeE,OAJf,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVtB,kBAcXM,GAdW,4CAAH,sDCDPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,wCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAMR,IACrB,4BAAIA,QCHHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAKtB,ECNwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA4BA,OAvBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEEH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAK1B,CAACtB,IAWGuB,EDxBsBK,CAAa5B,GAA9Ba,EAAZ,EAAON,KAAYe,EAAnB,EAAmBA,QAKnB,OACI,qCACI,oBAAIJ,UAAU,wCAAd,SAAuDlB,IAEtDsB,GAAW,mBAAGJ,UAAU,qCAAb,qBAEX,qBAAKA,UAAU,YAAf,SAEOL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEUtBkB,EA7BM,WAEhB,MAAoC3C,mBAAS,CAAC,kBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KASD,OAAQ,qCACJ,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCnBzB+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4d2933c5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n// const GifExpertApp = (props) => {\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [InputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        // props.setCategories()\r\n        e.preventDefault();\r\n\r\n        if (InputValue.trim().length > 2) {\r\n            setCategories(cats => [InputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={InputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=HNvKcrxTbLN21Le0QVqrmM3l9HbHSIP6`;\r\n    const resp = fetch(url);\r\n    const {data} = await (await resp).json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n     return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log(id,title,url)\r\n    return (\r\n        <div className=\"card animate__animated animate_fadeIn\">\r\n            <img src={url} alt ={title}/>\r\n            <p>{title}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { UseFetchGifs } from '../hooks/UseFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n\r\n\r\n    const {data:images,loading}= UseFetchGifs(category);\r\n    // console.log(data); \r\n    // console.log(loading); \r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\r\n            \r\n            {loading && <p className=\"animate__animated animate__flipInX\">Loading</p>}\r\n             \r\n             <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n\r\n                }\r\n\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/GetGifs\";\r\n\r\nexport const UseFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n             \r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n    // setTimeout(()=>{\r\n    //     setstate({\r\n    //         data: [1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     },3000)\r\n    // })\r\n\r\n\r\n    return state; //{data:[],loading:true}\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './componentes/AddCategory';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n\r\n// const GifExpertApp = (props) => {\r\nconst GifExpertApp = () => {\r\n\r\n     const [categories, setCategories] = useState(['One punch man']);\r\n\r\n    // const handleAdd = () => {\r\n    //     // categories.push('HxH')\r\n    //     // console.log(categories)\r\n    //     // setCategories([...categories,'HxH']);\r\n    //     setCategories(cats => [...cats, 'HxH']);\r\n    // }\r\n\r\n    return (<>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr />\r\n\r\n        <ol>\r\n            {\r\n                categories.map(category => (\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category}\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n    </>)\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// const GifExpertApp =()=> {\n\n//   return (<>\n//     <h2>GifExpertApp</h2>\n//     <hr />\n  \n//   </>)\n// }"],"sourceRoot":""}